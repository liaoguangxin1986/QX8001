


ARM Macro Assembler    Page 1 


    1 00000000         ;******************** (C) COPYRIGHT 2016 STMicroelectron
                       ics ********************
    2 00000000         ;* File Name          : startup_hsem100.s
    3 00000000         ;* Author             : MCD Application Team
    4 00000000         ;* Description        : Iris devices vector table for EW
                       ARM toolchain.
    5 00000000         ;*                      This module performs:
    6 00000000         ;*                      - Set the initial SP
    7 00000000         ;*                      - Set the initial PC == __iar_pr
                       ogram_start,
    8 00000000         ;*                      - Set the vector table entries w
                       ith the exceptions ISR 
    9 00000000         ;*                        address,
   10 00000000         ;*                      - Branches to main in the C libr
                       ary (which eventually
   11 00000000         ;*                        calls main()).
   12 00000000         ;*                      After Reset the Cortex-M0 proces
                       sor is in Thread mode,
   13 00000000         ;*                      priority is Privileged, and the 
                       Stack is set to Main.
   14 00000000         ;*******************************************************
                       ************************
   15 00000000         ;*
   16 00000000         ;* Redistribution and use in source and binary forms, wi
                       th or without modification,
   17 00000000         ;* are permitted provided that the following conditions 
                       are met:
   18 00000000         ;*   1. Redistributions of source code must retain the a
                       bove copyright notice,
   19 00000000         ;*      this list of conditions and the following discla
                       imer.
   20 00000000         ;*   2. Redistributions in binary form must reproduce th
                       e above copyright notice,
   21 00000000         ;*      this list of conditions and the following discla
                       imer in the documentation
   22 00000000         ;*      and/or other materials provided with the distrib
                       ution.
   23 00000000         ;*   3. Neither the name of STMicroelectronics nor the n
                       ames of its contributors
   24 00000000         ;*      may be used to endorse or promote products deriv
                       ed from this software
   25 00000000         ;*      without specific prior written permission.
   26 00000000         ;*
   27 00000000         ;* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AN
                       D CONTRIBUTORS "AS IS"
   28 00000000         ;* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
                        NOT LIMITED TO, THE
   29 00000000         ;* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
                        A PARTICULAR PURPOSE ARE
   30 00000000         ;* DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
                        CONTRIBUTORS BE LIABLE
   31 00000000         ;* FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPL
                       ARY, OR CONSEQUENTIAL
   32 00000000         ;* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT O
                       F SUBSTITUTE GOODS OR
   33 00000000         ;* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
                       INTERRUPTION) HOWEVER
   34 00000000         ;* CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CON
                       TRACT, STRICT LIABILITY,



ARM Macro Assembler    Page 2 


   35 00000000         ;* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING I
                       N ANY WAY OUT OF THE USE
   36 00000000         ;* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
                       OF SUCH DAMAGE.
   37 00000000         ;*
   38 00000000         ;*******************************************************
                       ************************
   39 00000000         ;
   40 00000000         ;
   41 00000000         ; The modules in this file are included in the libraries
                       , and may be replaced
   42 00000000         ; by any user-defined modules that define the PUBLIC sym
                       bol _program_start or
   43 00000000         ; a user defined start symbol.
   44 00000000         ; To override the cstartup defined in the library, simpl
                       y add your modified
   45 00000000         ; version to the workbench project.
   46 00000000         ;
   47 00000000         ; The vector table is normally located at address 0.
   48 00000000         ; When debugging in RAM, it can be located in RAM, align
                       ed to at least 2^6.
   49 00000000         ; The name "__vector_table" has special meaning for C-SP
                       Y:
   50 00000000         ; it is where the SP start value is found, and the NVIC 
                       vector
   51 00000000         ; table register (VTOR) is initialized to this address i
                       f != 0.
   52 00000000         ;
   53 00000000         ; Cortex-M version
   54 00000000         ;
   55 00000000         
   56 00000000         ; Amount of memory (in bytes) allocated for Stack
   57 00000000         ; Tailor this value to your application needs
   58 00000000         ; <h> Stack Configuration
   59 00000000         ;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   60 00000000         ; </h>
   61 00000000         
   62 00000000 00000FF0 
                       Stack_Size
                               EQU              0x00000ff0
   63 00000000         
   64 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   65 00000000         Stack_Mem
                               SPACE            Stack_Size
   66 00000FF0         __initial_sp
   67 00000FF0         
   68 00000FF0         
   69 00000FF0         ; <h> Heap Configuration
   70 00000FF0         ;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   71 00000FF0         ; </h>
   72 00000FF0         
   73 00000FF0 00001000 
                       Heap_Size
                               EQU              0x00001000
   74 00000FF0         
   75 00000FF0                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   76 00000000         __heap_base



ARM Macro Assembler    Page 3 


   77 00000000         Heap_Mem
                               SPACE            Heap_Size
   78 00001000         __heap_limit
   79 00001000         
   80 00001000                 PRESERVE8
   81 00001000                 THUMB
   82 00001000         
   83 00001000         
   84 00001000         ; Vector Table Mapped to Address 0 at Reset
   85 00001000                 AREA             RESET, DATA, READONLY
   86 00000000                 EXPORT           __Vectors
   87 00000000                 EXPORT           __Vectors_End
   88 00000000                 EXPORT           __Vectors_Size
   89 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   90 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   91 00000008         
   92 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   93 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
   94 00000010 00000000        DCD              0           ; Reserved
   95 00000014 00000000        DCD              0           ; Reserved
   96 00000018 00000000        DCD              0           ; Reserved
   97 0000001C 00000000        DCD              0           ; Reserved
   98 00000020 00000000        DCD              0           ; Reserved
   99 00000024 00000000        DCD              0           ; Reserved
  100 00000028 00000000        DCD              0           ; Reserved
  101 0000002C 00000000        DCD              SVC_Handler ; SVCall Handler
  102 00000030 00000000        DCD              0           ; Reserved
  103 00000034 00000000        DCD              0           ; Reserved
  104 00000038 00000000        DCD              PendSV_Handler ; PendSV Handler
                                                            
  105 0000003C 00000000        DCD              SysTick_Handler 
                                                            ; SysTick Handler
  106 00000040         
  107 00000040         ; External Interrupts
  108 00000040 00000000        DCD              DSP1_IRQHandler ; DSP1
  109 00000044 00000000        DCD              DSP2_IRQHandler ; DSP2
  110 00000048 00000000        DCD              I2C0_IRQHandler ; I2C0
  111 0000004C 00000000        DCD              I2C1_IRQHandler ; I2C1
  112 00000050 00000000        DCD              UART0_IRQHandler ; UART0
  113 00000054 00000000        DCD              SPI0_IRQHandler ; SPI0
  114 00000058 00000000        DCD              TIM0_IRQHandler ; TIM0
  115 0000005C 00000000        DCD              WDT0_IRQHandler ; Watchdog
  116 00000060 00000000        DCD              GPIO0_IRQHandler ; GPIO0
  117 00000064 00000000        DCD              CSI_IRQHandler ; CSI
  118 00000068 00000000        DCD              0           ; Reserved
  119 0000006C 00000000        DCD              0           ; Reserved
  120 00000070 00000000        DCD              0           ; Reserved
  121 00000074 00000000        DCD              0           ; Reserved
  122 00000078 00000000        DCD              0           ; Reserved
  123 0000007C 00000000        DCD              0           ; Reserved
  124 00000080 00000000        DCD              0           ; Reserved
  125 00000084 00000000        DCD              0           ; Reserved
  126 00000088 00000000        DCD              0           ; Reserved
  127 0000008C 00000000        DCD              0           ; Reserved
  128 00000090 00000000        DCD              0           ; Reserved
  129 00000094 00000000        DCD              0           ; Reserved



ARM Macro Assembler    Page 4 


  130 00000098 00000000        DCD              0           ; Reserved
  131 0000009C 00000000        DCD              0           ; Reserved
  132 000000A0 00000000        DCD              0           ; Reserved
  133 000000A4 00000000        DCD              0           ; Reserved
  134 000000A8 00000000        DCD              0           ; Reserved
  135 000000AC 00000000        DCD              0           ; Reserved
  136 000000B0         __Vectors_End
  137 000000B0         
  138 000000B0 000000B0 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  139 000000B0         
  140 000000B0                 AREA             |.text|, CODE, READONLY
  141 00000000         ; Reset handler routine
  142 00000000         Reset_Handler
                               PROC
  143 00000000                 EXPORT           Reset_Handler             [WEAK
]
  144 00000000                 IMPORT           __main
  145 00000000                 IMPORT           SystemInit
  146 00000000 4807            LDR              R0, =SystemInit
  147 00000002 4780            BLX              R0
  148 00000004 4807            LDR              R0, =__main
  149 00000006 4700            BX               R0
  150 00000008                 ENDP
  151 00000008         
  152 00000008         ; Dummy Exception Handlers (infinite loops which can be 
                       modified)
  153 00000008         
  154 00000008         NMI_Handler
                               PROC
  155 00000008                 EXPORT           NMI_Handler                [WEA
K]
  156 00000008 E7FE            B                .
  157 0000000A                 ENDP
  159 0000000A         HardFault_Handler
                               PROC
  160 0000000A                 EXPORT           HardFault_Handler          [WEA
K]
  161 0000000A E7FE            B                .
  162 0000000C                 ENDP
  163 0000000C         SVC_Handler
                               PROC
  164 0000000C                 EXPORT           SVC_Handler                [WEA
K]
  165 0000000C E7FE            B                .
  166 0000000E                 ENDP
  167 0000000E         PendSV_Handler
                               PROC
  168 0000000E                 EXPORT           PendSV_Handler             [WEA
K]
  169 0000000E E7FE            B                .
  170 00000010                 ENDP
  171 00000010         SysTick_Handler
                               PROC
  172 00000010                 EXPORT           SysTick_Handler            [WEA
K]
  173 00000010 E7FE            B                .
  174 00000012                 ENDP



ARM Macro Assembler    Page 5 


  175 00000012         
  176 00000012         Default_Handler
                               PROC
  177 00000012         
  178 00000012                 EXPORT           DSP1_IRQHandler            [WEA
K]
  179 00000012                 EXPORT           DSP2_IRQHandler            [WEA
K]
  180 00000012                 EXPORT           I2C0_IRQHandler            [WEA
K]
  181 00000012                 EXPORT           I2C1_IRQHandler            [WEA
K]
  182 00000012                 EXPORT           UART0_IRQHandler           [WEA
K]
  183 00000012                 EXPORT           SPI0_IRQHandler            [WEA
K]
  184 00000012                 EXPORT           TIM0_IRQHandler            [WEA
K]
  185 00000012                 EXPORT           WDT0_IRQHandler            [WEA
K]
  186 00000012                 EXPORT           GPIO0_IRQHandler           [WEA
K]
  187 00000012                 EXPORT           CSI_IRQHandler             [WEA
K]
  188 00000012         
  189 00000012         
  190 00000012         DSP1_IRQHandler
  191 00000012         DSP2_IRQHandler
  192 00000012         I2C0_IRQHandler
  193 00000012         I2C1_IRQHandler
  194 00000012         UART0_IRQHandler
  195 00000012         SPI0_IRQHandler
  196 00000012         TIM0_IRQHandler
  197 00000012         WDT0_IRQHandler
  198 00000012         GPIO0_IRQHandler
  199 00000012         CSI_IRQHandler
  200 00000012         
  201 00000012         
  202 00000012 E7FE            B                .
  203 00000014         
  204 00000014                 ENDP
  205 00000014         
  206 00000014                 ALIGN
  207 00000014         
  208 00000014         ;*******************************************************
                       ************************
  209 00000014         ; User Stack and Heap initialization
  210 00000014         ;*******************************************************
                       ************************
  211 00000014                 IF               :DEF:__MICROLIB
  218 00000014         
  219 00000014                 IMPORT           __use_two_region_memory
  220 00000014                 EXPORT           __user_initial_stackheap
  221 00000014         
  222 00000014         __user_initial_stackheap
  223 00000014         
  224 00000014 4804            LDR              R0, =  Heap_Mem
  225 00000016 4905            LDR              R1, =(Stack_Mem + Stack_Size)
  226 00000018 4A05            LDR              R2, = (Heap_Mem +  Heap_Size)



ARM Macro Assembler    Page 6 


  227 0000001A 4B06            LDR              R3, = Stack_Mem
  228 0000001C 4770            BX               LR
  229 0000001E         
  230 0000001E 00 00           ALIGN
  231 00000020         
  232 00000020                 ENDIF
  233 00000020         
  234 00000020                 END
              00000000 
              00000000 
              00000000 
              00000FF0 
              00001000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M0 --apcs=interwork --depend=..\outpu
t\startup_hs100.d -o..\output\startup_hs100.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Ke
il_v5\ARM\PACK\ARM\CMSIS\4.1.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.
1.1\Device\ARM\ARMCM0\Include --list=..\listing\startup_hs100.lst ..\startup\st
artup_hs100.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 64 in file ..\startup\startup_hs100.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 65 in file ..\startup\startup_hs100.s
   Uses
      At line 225 in file ..\startup\startup_hs100.s
      At line 227 in file ..\startup\startup_hs100.s

__initial_sp 00000FF0

Symbol: __initial_sp
   Definitions
      At line 66 in file ..\startup\startup_hs100.s
   Uses
      At line 89 in file ..\startup\startup_hs100.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 75 in file ..\startup\startup_hs100.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 77 in file ..\startup\startup_hs100.s
   Uses
      At line 224 in file ..\startup\startup_hs100.s
      At line 226 in file ..\startup\startup_hs100.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 76 in file ..\startup\startup_hs100.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00001000

Symbol: __heap_limit
   Definitions
      At line 78 in file ..\startup\startup_hs100.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 85 in file ..\startup\startup_hs100.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 89 in file ..\startup\startup_hs100.s
   Uses
      At line 86 in file ..\startup\startup_hs100.s
      At line 138 in file ..\startup\startup_hs100.s

__Vectors_End 000000B0

Symbol: __Vectors_End
   Definitions
      At line 136 in file ..\startup\startup_hs100.s
   Uses
      At line 87 in file ..\startup\startup_hs100.s
      At line 138 in file ..\startup\startup_hs100.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 140 in file ..\startup\startup_hs100.s
   Uses
      None
Comment: .text unused
CSI_IRQHandler 00000012

Symbol: CSI_IRQHandler
   Definitions
      At line 199 in file ..\startup\startup_hs100.s
   Uses
      At line 117 in file ..\startup\startup_hs100.s
      At line 187 in file ..\startup\startup_hs100.s

DSP1_IRQHandler 00000012

Symbol: DSP1_IRQHandler
   Definitions
      At line 190 in file ..\startup\startup_hs100.s
   Uses
      At line 108 in file ..\startup\startup_hs100.s
      At line 178 in file ..\startup\startup_hs100.s

DSP2_IRQHandler 00000012

Symbol: DSP2_IRQHandler
   Definitions
      At line 191 in file ..\startup\startup_hs100.s
   Uses
      At line 109 in file ..\startup\startup_hs100.s
      At line 179 in file ..\startup\startup_hs100.s

Default_Handler 00000012

Symbol: Default_Handler
   Definitions
      At line 176 in file ..\startup\startup_hs100.s
   Uses
      None
Comment: Default_Handler unused
GPIO0_IRQHandler 00000012

Symbol: GPIO0_IRQHandler
   Definitions
      At line 198 in file ..\startup\startup_hs100.s
   Uses
      At line 116 in file ..\startup\startup_hs100.s
      At line 186 in file ..\startup\startup_hs100.s

HardFault_Handler 0000000A

Symbol: HardFault_Handler
   Definitions
      At line 159 in file ..\startup\startup_hs100.s
   Uses
      At line 93 in file ..\startup\startup_hs100.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 160 in file ..\startup\startup_hs100.s

I2C0_IRQHandler 00000012

Symbol: I2C0_IRQHandler
   Definitions
      At line 192 in file ..\startup\startup_hs100.s
   Uses
      At line 110 in file ..\startup\startup_hs100.s
      At line 180 in file ..\startup\startup_hs100.s

I2C1_IRQHandler 00000012

Symbol: I2C1_IRQHandler
   Definitions
      At line 193 in file ..\startup\startup_hs100.s
   Uses
      At line 111 in file ..\startup\startup_hs100.s
      At line 181 in file ..\startup\startup_hs100.s

NMI_Handler 00000008

Symbol: NMI_Handler
   Definitions
      At line 154 in file ..\startup\startup_hs100.s
   Uses
      At line 92 in file ..\startup\startup_hs100.s
      At line 155 in file ..\startup\startup_hs100.s

PendSV_Handler 0000000E

Symbol: PendSV_Handler
   Definitions
      At line 167 in file ..\startup\startup_hs100.s
   Uses
      At line 104 in file ..\startup\startup_hs100.s
      At line 168 in file ..\startup\startup_hs100.s

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 142 in file ..\startup\startup_hs100.s
   Uses
      At line 90 in file ..\startup\startup_hs100.s
      At line 143 in file ..\startup\startup_hs100.s

SPI0_IRQHandler 00000012

Symbol: SPI0_IRQHandler
   Definitions
      At line 195 in file ..\startup\startup_hs100.s
   Uses
      At line 113 in file ..\startup\startup_hs100.s
      At line 183 in file ..\startup\startup_hs100.s

SVC_Handler 0000000C

Symbol: SVC_Handler



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 163 in file ..\startup\startup_hs100.s
   Uses
      At line 101 in file ..\startup\startup_hs100.s
      At line 164 in file ..\startup\startup_hs100.s

SysTick_Handler 00000010

Symbol: SysTick_Handler
   Definitions
      At line 171 in file ..\startup\startup_hs100.s
   Uses
      At line 105 in file ..\startup\startup_hs100.s
      At line 172 in file ..\startup\startup_hs100.s

TIM0_IRQHandler 00000012

Symbol: TIM0_IRQHandler
   Definitions
      At line 196 in file ..\startup\startup_hs100.s
   Uses
      At line 114 in file ..\startup\startup_hs100.s
      At line 184 in file ..\startup\startup_hs100.s

UART0_IRQHandler 00000012

Symbol: UART0_IRQHandler
   Definitions
      At line 194 in file ..\startup\startup_hs100.s
   Uses
      At line 112 in file ..\startup\startup_hs100.s
      At line 182 in file ..\startup\startup_hs100.s

WDT0_IRQHandler 00000012

Symbol: WDT0_IRQHandler
   Definitions
      At line 197 in file ..\startup\startup_hs100.s
   Uses
      At line 115 in file ..\startup\startup_hs100.s
      At line 185 in file ..\startup\startup_hs100.s

__user_initial_stackheap 00000014

Symbol: __user_initial_stackheap
   Definitions
      At line 222 in file ..\startup\startup_hs100.s
   Uses
      At line 220 in file ..\startup\startup_hs100.s
Comment: __user_initial_stackheap used once
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap_Size 00001000

Symbol: Heap_Size
   Definitions
      At line 73 in file ..\startup\startup_hs100.s
   Uses
      At line 77 in file ..\startup\startup_hs100.s
      At line 226 in file ..\startup\startup_hs100.s

Stack_Size 00000FF0

Symbol: Stack_Size
   Definitions
      At line 62 in file ..\startup\startup_hs100.s
   Uses
      At line 65 in file ..\startup\startup_hs100.s
      At line 225 in file ..\startup\startup_hs100.s

__Vectors_Size 000000B0

Symbol: __Vectors_Size
   Definitions
      At line 138 in file ..\startup\startup_hs100.s
   Uses
      At line 88 in file ..\startup\startup_hs100.s
Comment: __Vectors_Size used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SystemInit 00000000

Symbol: SystemInit
   Definitions
      At line 145 in file ..\startup\startup_hs100.s
   Uses
      At line 146 in file ..\startup\startup_hs100.s
Comment: SystemInit used once
__main 00000000

Symbol: __main
   Definitions
      At line 144 in file ..\startup\startup_hs100.s
   Uses
      At line 148 in file ..\startup\startup_hs100.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 219 in file ..\startup\startup_hs100.s
   Uses
      None
Comment: __use_two_region_memory unused
3 symbols
369 symbols in table
